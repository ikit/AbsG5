
app:
	python server.py

clear:
	rm -rf /var/absg/files/*
	rm -rf /var/absg/downloads/*
	rm -rf /var/absg/cache/*
	

list_db:
	database_name=$$(sed -n 's/^\s*DATABASE_NAME\s*=\s*"\([^"]\+\)".*/\1/p' config.py) ; \
	psql -U absg -d $${database_name} -c "SELECT relname as Table, pg_size_pretty(pg_total_relation_size(relid)) As Size, pg_size_pretty(pg_total_relation_size(relid) - pg_relation_size(relid)) as ExternalSize, rowcount as RowCount \
    FROM pg_catalog.pg_statio_user_tables  \
    LEFT JOIN ( \
        SELECT table_name, n_tup_ins - n_tup_del as rowcount  \
        FROM (SELECT DISTINCT table_name FROM information_schema.columns WHERE table_schema='public' ORDER BY table_name) AS _t  \
        LEFT JOIN pg_stat_all_tables ON table_name=relname ORDER BY table_name) AS _sub ON table_name=relname \
    ORDER BY table_name ASC"





init:
	cp ../install/config.default ./config.py
	echo "Please, edit the $PWD/config.py file before proceed to the installation with the command 'make install'"
	
install:
	database_name=$$(sed -n 's/^\s*DATABASE_NAME\s*=\s*"\([^"]\+\)".*/\1/p' config.py) ; \
	sudo -u postgres psql -c "SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE datname = '$${database_name}'" ; \
	sudo -u postgres psql -c "DROP DATABASE IF EXISTS $${database_name}" ; \
	sudo -u postgres psql -c "CREATE DATABASE $${database_name} OWNER absg" ; \
	psql -U absg -d $$database_name -f ../install/create_all.sql ;
	
update_hpo:
	database_name=$$(sed -n 's/^\s*DATABASE_NAME\s*=\s*"\([^"]\+\)".*/\1/p' config.py) ; \
	database_path=$$(sed -n 's/^\s*DATABASES_DIR\s*=\s*"\([^"]\+\)".*/\1/p' config.py) ; \
	sudo -u postgres psql -c "SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE datname = '$${database_name}'" ; \
	wget http://compbio.charite.de/jenkins/job/hpo.annotations.monthly/lastStableBuild/artifact/annotation/ALL_SOURCES_ALL_FREQUENCIES_diseases_to_genes_to_phenotypes.txt -O $$database_path/hpo_disease.txt;  \
	wget http://compbio.charite.de/jenkins/job/hpo.annotations.monthly/lastStableBuild/artifact/annotation/ALL_SOURCES_ALL_FREQUENCIES_phenotype_to_genes.txt -O $$database_path/hpo_phenotype.txt; \
	psql -U regovar -d $$database_name -f ../install/update_hpo.sql ;

test:
	database_name=$$(sed -n 's/^\s*DATABASE_NAME\s*=\s*"\([^"]\+\)".*/\1/p' config.py) ; \
	test -n "$${database_name}" && \
	sudo -u postgres psql -c "DROP DATABASE IF EXISTS $${database_name}_test" && \
	sudo -u postgres psql -c "CREATE DATABASE $${database_name}_test OWNER absg" && \
	psql -U absg -d $${database_name}_test -f ../install/create_all.sql && \
	psql -U absg -d $${database_name}_test -f tests/init_fake_data.sql && \
	sed -i.bak 's/^\(\s*DATABASE_NAME\s*=\s*"[^"]\+\)\(".*\)/\1_test\2/' config.py && \
	coverage run tests.py && \
	coverage report && \
	mv config.py config.test && \
	mv config.py.bak config.py && \
	sudo -u postgres psql -c "DROP DATABASE IF EXISTS $${database_name}_test"
	
	

.PHONY: install app clear 
